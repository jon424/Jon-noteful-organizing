{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/src/components/AddFolder.js\";\nimport React from \"react\";\nimport ValidationError from \"./ValidationError\";\nimport Context from \"../Context\";\nimport PropTypes from \"prop-types\";\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFolder, _React$Component);\n\n  function AddFolder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddFolder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\"\n    };\n\n    _this.setFolder = function (folder) {\n      _this.setState({\n        name: folder\n      });\n    };\n\n    _this.validateFolderName = function () {\n      var folderName = _this.state.name.trim();\n\n      if (folderName.length === 0) {\n        return \"Folder name is required\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var addFolder = this.context.addFolder;\n      return React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          addFolder(_this2.state);\n\n          _this2.props.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"folder-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"New Folder:\", this.state.name.length >= 1 && React.createElement(ValidationError, {\n        message: this.validateFolderName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"folder-name\",\n        placeholder: \"folder name\",\n        onChange: function onChange(event) {\n          _this2.setFolder(event.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return AddFolder;\n}(React.Component);\n\nAddFolder.contextType = Context;\nexport { AddFolder as default };\nAddFolder.propTypes = {\n  reset: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/jonathanjackson/Desktop/Jon-noteful-organizing/src/components/AddFolder.js"],"names":["React","ValidationError","Context","PropTypes","AddFolder","state","name","setFolder","folder","setState","validateFolderName","folderName","trim","length","addFolder","context","event","preventDefault","props","reset","target","value","Component","contextType","propTypes","func","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEqBC,S;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAMRC,S,GAAY,UAACC,MAAD,EAAY;AACtB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE;AAAR,OAAd;AACD,K;;UAEDE,kB,GAAqB,YAAM;AACzB,UAAMC,UAAU,GAAG,MAAKN,KAAL,CAAWC,IAAX,CAAgBM,IAAhB,EAAnB;;AACA,UAAID,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,eAAO,yBAAP;AACD;AACF,K;;;;;;;6BAEQ;AAAA;;AAAA,UACCC,SADD,GACe,KAAKC,OADpB,CACCD,SADD;AAGP,aACE;AACE,QAAA,QAAQ,EAAE,kBAAAE,KAAK,EAAI;AACjBA,UAAAA,KAAK,CAACC,cAAN;AACAH,UAAAA,SAAS,CAAC,MAAI,CAACT,KAAN,CAAT;;AACA,UAAA,MAAI,CAACa,KAAL,CAAWC,KAAX;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEG,KAAKd,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,IAA0B,CAA1B,IACD,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,KAAKH,kBAAL,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAPF,EAYE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,aAFL;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,QAAQ,EAAE,kBAAAM,KAAK,EAAI;AACjB,UAAA,MAAI,CAACT,SAAL,CAAeS,KAAK,CAACI,MAAN,CAAaC,KAA5B;AACD,SANH;AAOE,QAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,CADF;AAyBD;;;;EA9CoCrB,KAAK,CAACsB,S;;AAAxBlB,S,CAKZmB,W,GAAcrB,O;SALFE,S;AAiDrBA,SAAS,CAACoB,SAAV,GAAsB;AACpBL,EAAAA,KAAK,EAAEhB,SAAS,CAACsB,IAAV,CAAeC;AADF,CAAtB","sourcesContent":["import React from \"react\";\nimport ValidationError from \"./ValidationError\";\nimport Context from \"../Context\";\nimport PropTypes from \"prop-types\"\n\nexport default class AddFolder extends React.Component {\n  state = {\n    name: \"\"\n  };\n\n  static contextType = Context;\n\n  setFolder = (folder) => {\n    this.setState({ name: folder });\n  };\n\n  validateFolderName = () => {\n    const folderName = this.state.name.trim();\n    if (folderName.length === 0) {\n      return \"Folder name is required\";\n    }\n  };\n\n  render() {\n    const { addFolder } = this.context;\n\n    return (\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n          addFolder(this.state)\n          this.props.reset();\n        }}\n      >\n        <label htmlFor=\"folder-name\">\n          New Folder:\n          {this.state.name.length >= 1 && (\n          <ValidationError message={this.validateFolderName()} />)}\n        </label>\n        <input\n          type=\"text\"\n          id=\"folder-name\"\n          placeholder=\"folder name\"\n          onChange={event => {\n            this.setFolder(event.target.value);\n          }}\n          required\n        />\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\n\nAddFolder.propTypes = {\n  reset: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}