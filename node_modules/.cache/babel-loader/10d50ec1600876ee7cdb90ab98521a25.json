{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanjackson/Documents/Wendy-Jon-Noteful-Organizing-React-Code/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanjackson/Documents/Wendy-Jon-Noteful-Organizing-React-Code/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanjackson/Documents/Wendy-Jon-Noteful-Organizing-React-Code/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanjackson/Documents/Wendy-Jon-Noteful-Organizing-React-Code/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanjackson/Documents/Wendy-Jon-Noteful-Organizing-React-Code/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanjackson/Documents/Wendy-Jon-Noteful-Organizing-React-Code/src/NotePageNav/AddFolder.js\";\nimport React from \"react\";\nimport ValidationError from \"./ValidationError\"; //add onSubmit to form\n//add onChange to input field\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFolder, _React$Component);\n\n  function AddFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this, props));\n\n    _this.handleAddFolder = function (e) {\n      e.preventDefault();\n      var folderId = _this.props.id;\n      fetch(\"\".concat(config.API_ENDPOINT, \"/folders/\").concat(folderId), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function () {\n        _this.context.deleteNote(noteId); // allow parent to perform extra behaviour\n\n\n        _this.props.onDeleteNote(noteId);\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      name: {\n        value: \"\",\n        touched: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"validateName\",\n    value: function validateName() {\n      var name = this.state.name.value.trim();\n\n      if (name.length === 0) {\n        return \"Name is required\";\n      } else if (name.length < 3) {\n        return \"Name must be at least 3 characters long\";\n      }\n    }\n  }, {\n    key: \"updateName\",\n    value: function updateName(name) {\n      this.setState({\n        name: {\n          value: name,\n          touched: true\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var name = this.state.name;\n      document.getElementById(\"Add\").reset();\n      console.log(name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var nameError = this.validateName();\n      return React.createElement(\"form\", {\n        className: \"Add-folder\",\n        id: \"Add\",\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"Folder-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Add Folder Name\"), React.createElement(\"input\", {\n        type: \"Text\",\n        className: \"Folder-input\",\n        id: \"Folder-label\",\n        onChange: function onChange(e) {\n          return _this2.updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), this.state.name.touched && React.createElement(ValidationError, {\n        message: nameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"Add-folder-button\",\n        disabled: nameError,\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Add Folder\"));\n    }\n  }]);\n\n  return AddFolder;\n}(React.Component);\n\nAddFolder.defaultProps = {\n  history: {\n    goBack: function goBack() {}\n  },\n  match: {\n    params: {}\n  }\n};\nAddFolder.defaultProps = {\n  history: {\n    goBack: function goBack() {}\n  },\n  match: {\n    params: {}\n  }\n};\nexport { AddFolder as default };","map":{"version":3,"sources":["/Users/jonathanjackson/Documents/Wendy-Jon-Noteful-Organizing-React-Code/src/NotePageNav/AddFolder.js"],"names":["React","ValidationError","AddFolder","props","handleAddFolder","e","preventDefault","folderId","id","fetch","config","API_ENDPOINT","method","headers","then","res","ok","json","Promise","reject","context","deleteNote","noteId","onDeleteNote","catch","error","console","state","name","value","touched","trim","length","setState","event","document","getElementById","reset","log","nameError","validateName","handleSubmit","updateName","target","history","goBack","Component","defaultProps","match","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ValidationError from \"./ValidationError\";\n\n//add onSubmit to form\n//add onChange to input field\nexport default class AddFolder extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => {}\n    },\n    match: {\n      params: {}\n    }\n  };\n\n  handleAddFolder = e => {\n    e.preventDefault()\n    const folderId = this.props.id\n\n  fetch(`${config.API_ENDPOINT}/folders/${folderId}`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n  })\n    .then(res => {\n      if (!res.ok)\n        return res.json().then(e => Promise.reject(e))\n      return res.json()\n    })\n    .then(() => {\n      this.context.deleteNote(noteId)\n      // allow parent to perform extra behaviour\n      this.props.onDeleteNote(noteId)\n    })\n    .catch(error => {\n      console.error({ error })\n    })\n  }\n\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: { value: \"\", touched: false }\n    };\n  }\n  static defaultProps = {\n    history: {\n      goBack: () => {}\n    },\n    match: {\n      params: {}\n    }\n  };\n  validateName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"Name is required\";\n    } else if (name.length < 3) {\n      return \"Name must be at least 3 characters long\";\n    }\n  }\n\n  updateName(name) {\n    this.setState({\n      name: {\n        value: name,\n        touched: true\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { name } = this.state;\n    document.getElementById(\"Add\").reset();\n    console.log(name);\n  }\n  render() {\n    const nameError = this.validateName();\n    return (\n      <form\n        className=\"Add-folder\"\n        id=\"Add\"\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <label htmlFor=\"Folder-label\">Add Folder Name</label>\n        <input\n          type=\"Text\"\n          className=\"Folder-input\"\n          id=\"Folder-label\"\n          onChange={e => this.updateName(e.target.value)}\n        ></input>\n        {this.state.name.touched && <ValidationError message={nameError} />}\n        <button\n          type=\"submit\"\n          className=\"Add-folder-button\"\n          disabled={nameError}\n          onClick={() => this.props.history.goBack()}\n          >\n          Add Folder\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}