{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanjackson/Desktop/Jon-noteful-organizing/src/components/Notes.js\";\nimport React from \"react\";\nimport AddNote from './AddNote';\nimport Note from \"./Note\";\nimport Context from \"../Context\";\n\nvar Notes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notes, _React$Component);\n\n  function Notes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Notes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Notes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      addingNote: false\n    };\n\n    _this.setAdding = function () {\n      _this.setState({\n        addingNote: true\n      });\n    };\n\n    _this.resetAdding = function () {\n      _this.setState({\n        addingNote: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Notes, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filteredNotes;\n      var selectedFolderId = this.props.match.params.folderId;\n\n      if (!selectedFolderId) {\n        filteredNotes = this.context.notes;\n      } else {\n        filteredNotes = this.context.notes.filter(function (note) {\n          return note.folderId === selectedFolderId;\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, filteredNotes.map(function (note) {\n        return React.createElement(Note, {\n          key: note.id,\n          id: note.id,\n          name: note.name,\n          modified: note.modified,\n          history: _this2.props.history,\n          match: _this2.props.match,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setAdding();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Add new note\"), this.state.addingNote && React.createElement(AddNote, {\n        reset: this.resetAdding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Notes;\n}(React.Component);\n\nNotes.contextType = Context;\nexport { Notes as default };","map":{"version":3,"sources":["/Users/jonathanjackson/Desktop/Jon-noteful-organizing/src/components/Notes.js"],"names":["React","AddNote","Note","Context","Notes","state","addingNote","setAdding","setState","resetAdding","filteredNotes","selectedFolderId","props","match","params","folderId","context","notes","filter","note","map","id","name","modified","history","Component","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;;IAEqBC,K;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;UAMRC,S,GAAY,YAAM;AAChB,YAAKC,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;UAEDG,W,GAAc,YAAM;AAClB,YAAKD,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA;;AACP,UAAII,aAAJ;AACA,UAAMC,gBAAgB,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,QAAjD;;AACA,UAAI,CAACJ,gBAAL,EAAuB;AACrBD,QAAAA,aAAa,GAAG,KAAKM,OAAL,CAAaC,KAA7B;AACD,OAFD,MAEO;AACLP,QAAAA,aAAa,GAAG,KAAKM,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CACd,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACJ,QAAL,KAAkBJ,gBAAtB;AAAA,SADU,CAAhB;AAGD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,aAAa,CAACU,GAAd,CAAkB,UAAAD,IAAI,EAAI;AACzB,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACE,EADZ;AAEE,UAAA,EAAE,EAAEF,IAAI,CAACE,EAFX;AAGE,UAAA,IAAI,EAAEF,IAAI,CAACG,IAHb;AAIE,UAAA,QAAQ,EAAEH,IAAI,CAACI,QAJjB;AAKE,UAAA,OAAO,EAAE,MAAI,CAACX,KAAL,CAAWY,OALtB;AAME,UAAA,KAAK,EAAE,MAAI,CAACZ,KAAL,CAAWC,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,OAXA,CADH,EAaE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACN,SAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF,EAgBG,KAAKF,KAAL,CAAWC,UAAX,IACC,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKG,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,CADF;AAsBD;;;;EAnDgCT,KAAK,CAACyB,S;;AAApBrB,K,CAKZsB,W,GAAcvB,O;SALFC,K","sourcesContent":["import React from \"react\";\nimport AddNote from './AddNote';\nimport Note from \"./Note\";\nimport Context from \"../Context\";\n\nexport default class Notes extends React.Component {\n  state = {\n    addingNote: false\n  }\n  \n  static contextType = Context;\n\n  setAdding = () => {\n    this.setState({\n      addingNote: true\n    })\n  }\n\n  resetAdding = () => {\n    this.setState({\n      addingNote: false\n    })\n  }\n\n  render() {\n    let filteredNotes;\n    const selectedFolderId = this.props.match.params.folderId;\n    if (!selectedFolderId) {\n      filteredNotes = this.context.notes;\n    } else {\n      filteredNotes = this.context.notes.filter(\n        note => note.folderId === selectedFolderId\n      );\n    }\n    return (\n      <div>\n        {filteredNotes.map(note => {\n          return (\n            <Note\n              key={note.id}\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n              history={this.props.history}\n              match={this.props.match}\n            />\n          );\n        })}\n        <button onClick={() => this.setAdding()}>\n          Add new note\n        </button>\n        {this.state.addingNote && (\n          <AddNote reset={this.resetAdding} />\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}