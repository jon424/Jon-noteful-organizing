{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanjackson/Documents/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanjackson/Documents/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanjackson/Documents/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanjackson/Documents/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonathanjackson/Documents/Jon-noteful-organizing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanjackson/Documents/Jon-noteful-organizing/src/components/AddNote.js\";\nimport React from 'react';\nimport ShowFolder from './ShowFolder';\nimport ValidationError from './ValidationError';\nimport Context from '../Context';\nimport PropTypes from 'prop-types';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      modified: Date.now(),\n      folderId: \"\",\n      content: \"\"\n    };\n\n    _this.setNoteName = function (note) {\n      _this.setState({\n        name: note\n      });\n    };\n\n    _this.setNoteFolderId = function (folderId) {\n      _this.setState({\n        folderId: folderId\n      });\n    };\n\n    _this.setNoteContent = function (content) {\n      _this.setState({\n        content: content\n      });\n    };\n\n    _this.validateNoteName = function () {\n      var noteName = _this.state.name.trim();\n\n      if (noteName.length === 0) {\n        return \"Note name is required\";\n      }\n    };\n\n    _this.validateNoteContent = function () {\n      var noteContent = _this.state.content.trim();\n\n      if (noteContent.length === 0) {\n        return \"Note content is required\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var addNote = this.context.addNote;\n      return React.createElement(\"form\", {\n        className: \"add-note\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          addNote(_this2.state);\n\n          _this2.props.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Note Name:\", this.state.name.length >= 1 && React.createElement(ValidationError, {\n        message: this.validateNoteName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"note-name\",\n        name: \"note-name\",\n        onChange: function onChange(event) {\n          _this2.setNoteName(event.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"note-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Note Content:\", this.state.content.length >= 1 && React.createElement(ValidationError, {\n        message: this.validateNoteContent(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"note-content\",\n        name: \"note-content\",\n        onChange: function onChange(event) {\n          _this2.setNoteContent(event.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"note-folder-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Folder:\"), React.createElement(\"select\", {\n        id: \"note-folder-id\",\n        name: \"note-folder-id\",\n        onChange: function onChange(event) {\n          _this2.setNoteFolderId(event.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"select folder\"), React.createElement(ShowFolder, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"submit\"));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.contextType = Context;\nexport { AddNote as default };\nAddNote.propTypes = {\n  reset: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/jonathanjackson/Documents/Jon-noteful-organizing/src/components/AddNote.js"],"names":["React","ShowFolder","ValidationError","Context","PropTypes","AddNote","state","name","modified","Date","now","folderId","content","setNoteName","note","setState","setNoteFolderId","setNoteContent","validateNoteName","noteName","trim","length","validateNoteContent","noteContent","addNote","context","event","preventDefault","props","reset","target","value","Component","contextType","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ShowFolder from './ShowFolder';\nimport ValidationError from './ValidationError';\nimport Context from '../Context';\nimport PropTypes from 'prop-types'\n\nexport default class AddNote extends React.Component {\n  state = {\n    name: \"\",\n    modified: Date.now(),\n    folderId: \"\",\n    content: \"\"\n  };\n\n  static contextType = Context;\n\n  setNoteName = (note) => {\n    this.setState({\n      name: note\n    })\n  }\n\n  setNoteFolderId = (folderId) => {\n    this.setState({\n      folderId: folderId\n    })\n  }\n\n  setNoteContent = (content) => {\n    this.setState({\n      content: content\n    })\n  }\n\n  validateNoteName = () => {\n    const noteName = this.state.name.trim();\n    if (noteName.length === 0) {\n      return \"Note name is required\";\n    }\n  }\n\n  validateNoteContent = () => {\n    const noteContent = this.state.content.trim();\n    if (noteContent.length === 0) {\n      return \"Note content is required\";\n    }\n  }\n\n  render() {\n    const { addNote } = this.context;\n    \n    return (\n      <form className=\"add-note\" onSubmit={event => {\n        event.preventDefault()\n        addNote(this.state)\n        this.props.reset()\n      }}>\n        <label htmlFor=\"note-name\">\n          Note Name:\n          {this.state.name.length >= 1 && (\n            <ValidationError message={this.validateNoteName()} />)}\n        </label>\n        <input\n          type=\"text\"\n          id=\"note-name\"\n          name=\"note-name\"\n          onChange={event => {\n            this.setNoteName(event.target.value)\n          }}\n          required\n        />\n        <label htmlFor=\"note-content\">\n          Note Content:\n          {this.state.content.length >= 1 && (\n            <ValidationError message={this.validateNoteContent()} />)}\n        </label>\n        <input\n          type=\"text\"\n          id=\"note-content\"\n          name=\"note-content\"\n          onChange={event => {\n            this.setNoteContent(event.target.value)\n          }}\n          required\n        />\n        <label htmlFor=\"note-folder-id\">\n          Folder:\n        </label>\n        <select\n          id=\"note-folder-id\"\n          name=\"note-folder-id\"\n          onChange={event => {\n            this.setNoteFolderId(event.target.value)\n          }}\n          required\n        >\n          <option value=\"\">select folder</option>\n          <ShowFolder />\n        </select>\n        <button>submit</button>\n      </form>\n    )\n  }\n}\n\nAddNote.propTypes = {\n  reset: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}